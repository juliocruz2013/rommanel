# =====================
# STAGE 1 – Build
# =====================
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

COPY . .

RUN dotnet restore Infra/RommanelTeste.Migration/RommanelTeste.Persistence.Migration.csproj \
  --runtime linux-x64

RUN dotnet publish Infra/RommanelTeste.Migration/RommanelTeste.Persistence.Migration.csproj \
  -c Release \
  -r linux-x64 \
  --no-self-contained \
  --output /app/migrations

RUN dotnet publish Presentation/RommanelTeste.Presentation.API -c Release -o /app/publish

RUN dotnet publish Infra/RommanelTeste.Migration/RommanelTeste.Persistence.Migration.csproj \
  -c Release -r linux-x64 --self-contained false --output /app/migrations

# =====================
# STAGE 2 – Runtime
# =====================
FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app

RUN apt-get update && apt-get install -y netcat-openbsd && rm -rf /var/lib/apt/lists/*

COPY --from=build /app/publish ./api
COPY --from=build /app/migrations ./migrations

ENV ASPNETCORE_URLS=http://+:80
EXPOSE 80

COPY docker-entrypoint.sh .
RUN chmod +x ./docker-entrypoint.sh

ENTRYPOINT ["./docker-entrypoint.sh"]
